@startuml 4xx_cyclicOperationOnPowerSavingDectivationQueue
skinparam responseMessageBelowArrow true

title
RequestForPowerSavingDeactivationCausesCyclicOperation
end title

participant "RO" as ro
participant "AIPS://v1/embed-yourself" as embedYourself
'participant "AIPS://v1/provide-power-saving-status-of-link" as listStatus
participant "AIPS://v1/list-power-saving-status" as listStatus
participant "AIPS://v1/remove-links-from-power-saving-deactivation-queue" as removeFromQueue
participant "AIPS://v1/reactivate-transmitters-of-link" as reactivateTransmitters

ro -> embedYourself
activate embedYourself 

note over embedYourself
  Cylic operation iterates over records in power saving deactivation queue
  (of PersistentDeactivation module)
  - record columns: <i>linkId, automationName, switchingOperationName</i>
  - queue records are not unique
  - records are deleted only after successful power-saving switch-off    
end note

note over embedYourself
  Module execution is triggered, capture the startTime.
  The runtime will be monitored and compared to the maximum
  configured runtime for the module.
end note

group While runtime < maximum configured runtime

  'get power saving status of links
  note over embedYourself
    <u>GetPowerSavingStatusTable</u>
  end note
  embedYourself -> listStatus
  listStatus --> embedYourself: {list-of-(linkId, list-of(deviationsFromOriginalState))}

  'only keep linkIds, remove those with no powerSaving
  note over embedYourself
    Determine <i>listOfLinksWithActivePowerSaving</i>:
    - iterate over GetPowerSavingStatusTable.response
    - remove all entries where 
      <i>list-of(deviationsFromOriginalState)</i> == emptyList
    - when done, only keep linkId column
  end note
  
  'remove the linkIds without powerSaving from the DeactivationQueue
  group FOR EACH record in deactivationQueue
  note over embedYourself
    (remove linkIds which are not in powerSaving mode)
    WITH (<i>linkId, automationName, *</i>) from record 
      IF (<i>listOfLinksWithActivePowerSaving</i>.containsNOT(<i>linkId</i>))
      THEN <u>RemoveRecordFromDeactiviationQueue</u> 
  end note
  embedYourself -> removeFromQueue: {linkId, automationName}
  end

  group FOR EACH record in deactivationQueue
    'for all remaining entries
    note over embedYourself
      <u>AllTransmittersOn</u>
    end note
    embedYourself -> reactivateTransmitters: {linkId, automationName}
    reactivateTransmitters --> embedYourself: {responseCode}

    'if success remove from list
    note over embedYourself
      IF (AllTransmittersOn.responseCode == 200)
      THEN <u>RemoveRecordFromDeactivationQueue</u>        
    end note
    embedYourself -> removeFromQueue: {linkId, automationName}
  end

  'waiting time at end of list
  note over embedYourself
    wait for configured number of minutes
    then start again at list start
  end note
end

note over embedYourself #pink
  was ist mit Einträgen die zwischendrin hinzukommen?
  die werden von GetPowerSavingStatusTable und anschließendem Löschen
  nicht berücksichtigt...
end note

deactivate embedYourself

@enduml