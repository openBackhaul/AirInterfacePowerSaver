@startuml 4xx_cyclicOperationOnPowerSavingActivationQueue
skinparam responseMessageBelowArrow true

title
RequestForEmbeddingCausesCyclicOperationOnPowerSavingActivationQueue
end title

participant "RO" as ro
participant "AIPS://v1/embed-yourself" as embedYourself
participant "AIPS://v1/is-link-barred" as isLinkBarred
participant "AIPS://v1/remove-links-from-power-saving-activation-queue" as removeFromQueue
participant "AIPS://v1/switch-redundant-transmitter-pair-off" as redundantTransmittersOff


ro -> embedYourself

'cyclic operation starts
note over embedYourself
  CyclicOperation iterates over power saving activation queue
  (from SimpleActivation module)

  - queue records have the following columns:
    <i>linkId, automationName, switchingOperationName</i>
  - records are NOT unique
end note

activate embedYourself

'iterate over queue
group FOR each record in activationQueue
  ' get the blackList status for the link
  note over embedYourself
      <u>BlackListCheck</u>
  end note
  embedYourself -> isLinkBarred: {linkId}
  isLinkBarred --> embedYourself: {boolean}


  'if link is not in blackList
  note over embedYourself
    IF (<i>record.linkId.isBarred</i>==false)
      <u>SwitchRedundantTransmitterOff</u>
  end note
  embedYourself -> redundantTransmittersOff: {linkId, automationName, own_IpAddress, own_TcpPort, /v1/receive-power-saving-activation-status}
  redundantTransmittersOff --> embedYourself: {requestId}

  'remove from the activationQueue anyway (i.e. if link is in blackList or not)
  note over embedYourself
    <u>RemoveRecordFromActivationQueue</u>
  end note
  embedYourself -> removeFromQueue: {linkId, automationName}

end

deactivate embedYourself

@enduml